a + b

    描述:
    给你两个数a、b，请你计算它们的和，并输出。例如： a = 3, b = 2则输出：5提示：挑战python栏目的所有题目，题目中所给变量使用前不用声明，也不用赋值，系统自动赋值。如本题，只需一行代码即可： print a + b系统会自动为a和b赋值，并检查代码执行结果和标准答案是否相同。
    
列表排序

    描述:
    给你一个列表&nbsp;L, 对L进行升序排序并输出排序后的列表。例如：L = [8,2,50,3]则输出：[2,3,8,50]
    
字符串逆序

    描述:
    给你一个字符串 a， 请你输出逆序之后的a。例如：a=‘xydz’则输出：zdyx
    
输出字典key

    描述:
    给你一字典a，如a={1:1,2:2,3:3}，输出字典a的key，以','连接，如‘1,2,3'。要求key按照<span style="color:#ff0000;">字典序升序排列</span>(注意key可能是字符串）。例如：a={1:1,2:2,3:3}, 则输出：1,2,3
    
输出字符奇数位置的字符串

    描述:
    给你一个字符串 a， 输出a中奇数位置字符构成的字符串（位置编号从1开始）。例如：a=‘xyzwd’则输出:xzd
    
求解100以内的所有素数

    描述:
    输出100以内的所有素数，素数之间以一个空格区分（注意，最后一个数字之后不能有空格）。
    
求矩形面积

    描述:
    已知矩形长a,宽b,输出其面积和周长，面积和周长以一个空格隔开。例如：a = 3, b = 8则输出：24 22
    
求中位数

    描述:
    给你一个整数列表L, 输出L的中位数（若结果为小数，则保留一位小数）。例如： L=[0,1,2,3,4]<br />则输出：2
    
最大公约数

    描述:
    给你两个正整数a和b， 输出它们的最大公约数。例如：a = 3, b = 5则输出：1
    
最小公倍数

    描述:
    给你两个正整数a和b， 输出它们的最小公倍数。例如：a = 3, b = 5则输出：15
    
结尾0的个数

    描述:
    给你一个正整数列表 L, 输出L内所有数字的乘积末尾0的个数。(提示:不要直接相乘,数字很多,相乘得到的结果可能会很大)。例如： L=[2,8,3,50],<br />则输出：2<br />
    
结尾非零数的奇偶性

    描述:
    给你一个正整数列表 L, 判断列表内所有数字乘积的最后一个非零数字的奇偶性。如果为奇数输出1,偶数则输出0.。例如：L=[2,8,3,50]<br />则输出：0
    
光棍的悲伤

    描述:
    光棍们对1总是那么敏感，因此每年的11.11被戏称为光棍节。小Py光棍几十载，光棍自有光棍的快乐。让我们勇敢地面对光棍的身份吧，现在就证明自己：给你一个整数a，数出a在二进制表示下1的个数，并输出。例如：a=7则输出：3
    
Python之美

    描述:
    输出Python之禅。注意：输出python之禅的源码即可，不要转换为英文。（小小的提示：print this.s)
    
大小写转换

    描述:
    给定一个字符串a, 将a中的大写字母 转换成小写，其它字符不变，并输出。例如：a=&quot;aaaaaabbbDDDDD&quot;则输出：aaaaaabbbddddd
    
人民币金额打印

    描述:
    银行在打印票据的时候，常常需要将阿拉伯数字表示的人民币金额转换为大写表示，现在请你来完成这样一个程序。在中文大写方式中，0到10以及100、1000、10000被依次表示为：    零 壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 佰 仟 万以下的例子示范了阿拉伯数字到人民币大写的转换规则：1	壹圆11	壹拾壹圆111	壹佰壹拾壹圆101	壹佰零壹圆-1000	负壹仟圆1234567	壹佰贰拾叁万肆仟伍佰陆拾柒圆现在给你一个整数a(|a|&lt;100000000), 请你打印出人民币大写表示.例如：a=1则输出：壹圆<span style="color: rgb(255, 0, 0);">注意</span>：请以Unicode的形式输出答案。提示：所有的中文字符，在代码中直接使用其Unicode的形式即可满足要求，中文的Unicode编码可以通过如下方式获得：u'壹'。<span style="font-size:18px;color:#ff0000;">注意：代码无需声明编码！！</span><span style="font-size:18px;"><span style="color:#ff0000;">不要在代码头部声明文件编码，否则会导致语法错误！</span></span>Note：数据已于2013-11-19日加强，原来通过的代码可能不能再次通过。<br />
    
公约数的个数

    描述:
    给你两个正整数a,b,  输出它们公约数的个数。例如：a = 24， b = 36则输出：6
    
逆解最大公约数与最小公倍数

    描述:
    我们经常遇到的问题是给你两个数，要你求最大公约数和最小公倍数。今天我们反其道而行之，给你两个数a和b，计算出它们分别是哪两个数的最大公约数和最小公倍数。输出这两个数，小的在前，大的在后，以空格隔开。若有多组解，输出它们之和最小的那组。注：所给数据都有解，不用考虑无解的情况。例如：a=3, b = 60则输出：12 15
    
单身情歌

    描述:
    抓不住爱情的我 总是眼睁睁看它溜走 ...现在来练习一下发现爱的能力，给你一个字符串a,如果其中包含&quot;LOVE&quot;（love不区分大小写)则输出LOVE，否则输出SINGLE。例如：a =&nbsp;&quot;OurWorldIsFullOfLOVE&quot;则输出：LOVE
    
信息加密

    描述:
    给你个小写英文字符串a和一个非负数b(0&lt;=b&lt;26), 将a中的每个小写字符替换成字母表中比它大b的字母。这里将字母表的z和a相连，如果超过了z就回到了a。例如a=&quot;cagy&quot;, b=3,&nbsp;则输出 ：fdjb
    
回文子串

    描述:
    给你一个字符串a和一个正整数n,判断a中是否存在长度为n的回文子串。如果存在，则输出YES，否则输出NO。
回文串的定义：记串str逆序之后的字符串是str1，若str=str1,则称str是回文串，如"abcba".
    
时间就是金钱

    描述:
    给你两个时间st和et(00:00:00<=st <= et<=23:59:59), 请你给出这两个时间间隔的秒数。
如：st="00:00:00", et="00:00:10", 则输出10.
    
365 Or 366？

    描述:
    一年有多少天，这是个大问题，很值得思考。现在给你一个年份year(year为四位数字的字符串，如"2008","0012"),
你输出这一年的天数。如year="2013", 则输出365。
    
一马当先

    描述:
    下过象棋的人都知道，马只能走'日'字形（包括旋转90°的日），现在想象一下，给你一个n行m列网格棋盘，
棋盘的左下角有一匹马，请你计算至少需要几步可以将它移动到棋盘的右上角，若无法走到，则输出-1.
如n=1，m=2,则至少需要1步；若n=1，m=3,则输出-1。
    
格式化时间

    描述:
    给你一个时间t（t是一个字典，共有六个字符串key(year,month,day,hour,minute,second),值为每个值为数字组成的字符串，
如t={'year':'2013','month':'9','day':'30','hour':'16','minute':'45','second':'2'}
请将其按照以下格式输出， 格式:XXXX-XX-XX XX:XX:XX。如上例应该输出： 2013-09-30 16:45:02。
    
序列判断

    描述:
    给你一个整数组成的列表L，按照下列条件输出：
若L是升序排列的,则输出"UP";
若L是降序排列的,则输出"DOWN";
若L无序，则输出"WRONG"。
    
加油站

    描述:
    一个环形的公路上有n个加油站，编号为0,1,2,...n-1,
每个加油站加油都有一个上限，保存在列表limit中，即limit[i]为第i个加油站加油的上限，
而从第i个加油站开车开到第(i+1)%n个加油站需要cost[i]升油,cost为一个列表。
现在有一辆开始时没有油的车，要从一个加油站出发绕这个公路跑一圈回到起点。
给你整数n，列表limit和列表cost,你来判断能否完成任务。
如果能够完成任务，输出起始的加油站编号，如果有多个,输出编号最小的。
如果不能完成任务，输出-1。
    
相同数字

    描述:
    给你一个整数列表L,判断L中是否存在相同的数字，
若存在，输出YES，否则输出NO。
    
判断三角形

    描述:
    给你三个整数a,b,c,  判断能否以它们为三个边长构成三角形。
若能，输出YES，否则输出NO。
    
National Day

    描述:
    马上国庆节了，用一个英文单词描述你此时此刻的心情。
    
山峰的个数

    描述:
    十一假期,小P出去爬山,爬山的过程中每隔10米他都会记录当前点的海拔高度(以一个浮点数表示),
这些值序列保存在一个由浮点数组成的列表h中。回到家中，小P想研究一下自己经过了几个山峰，请你帮他计算一下，输出结果。
例如：h=[0.9,1.2,1.22,1.1,1.6,0.99], 将这些高度顺序连线，会发现有两个山峰，故输出一个2(序列两端不算山峰)
    
三角形形状

    描述:
    给以一个三角形的三边长a,b和c(边长是浮点数),请你判断三角形的形状。
若是锐角三角形，输出R,
若是直角三角形，输出Z，
若是钝角三角形，输出D，
若三边长不能构成三角形，输出W.
    
大幂次运算

    描述:
    给你两个正整数a(0 < a < 100000)和n(0 <= n <=100000000000)，计算(a^n) % 20132013并输出结果
    
密码生成

    描述:
    生活在当代社会，我们要记住很多密码，银行卡，qq，人人，微博，邮箱等等。小P经过一番思索之后，发明了下面这种生成密码方法：给定两个正整数a和b, 利用a / b我们会得到一个长度无限的小数(若a / b不是无限小数，比如1/2=0.5,我们认为0.5是0.5000000...，同样将其看做无限长的小数），小P将该小数点后第x位到第y位的数字当做密码，这样，无论密码有多长，小P只要记住a,b,x,y四个数字就可以了，牢记密码再也不是那么困难的事情了。现在告诉你a,b,x,y（0 &lt; a,b &lt;= 20132013, 0 &lt; x &lt;= y &lt; 100000000000),请你输出密码。例如：a = 1, b = 2, x = 1, y = 4, 则 a / b = 0.5000000..., 输出小数点后第1到4位数字，即5000
    
最大连续子序列

    描述:
    给你一个整数list L, 如 L=[2,-3,3,50], 求L的一个连续子序列，使其和最大，输出最大子序列的和。
例如，对于L=[2,-3,3,50]， 输出53（分析：很明显，该列表最大连续子序列为[3,50]).
    
最大非连续子序列

    描述:
    给你一个整数list L, 如 L=[2,-3,3,50], 求L的一个非连续子序列，使其和最大，输出最大子序列的和。
这里非连续子序列的定义是，子序列中任意相邻的两个数在原序列里都不相邻。
例如，对于L=[2,-3,3,50]， 输出52（分析：很明显，该列表最大非连续子序列为[2,50]).
    
简单题之勾股定理

    描述:
    给你直角三角形的两个直角边的边长a,b,请你求出其斜边边长，结果保留小数点后三位小数。
如a=3, b =4, 则输出5.000。
    
简单题之列表转换

    描述:
    给你一个字符串列表L，请用一行代码将列表所有元素拼接成一个字符串并输出。
如L=['abc','d','efg'], 则输出abcdefg。
    
简单题之输出格式练习

    描述:
    给你一个字符串列表L，用一行代码顺序输出L中的元素，元素之间以一个空格隔开，注意行尾不要有空格，输出单独占一行。
如L=['abc','d','efg'], 则输出abc d efg。
    
整数解

    描述:
    给你两个整数a和b（-10000<a,b<10000），请你判断是否存在两个整数，他们的和为a，乘积为b。
若存在，输出Yes,否则输出No
例如：a=9,b=15, 此时不存在两个整数满足上述条件，所以应该输出No。
    
Py数

    描述:
    Py从小喜欢奇特的东西，而且天生对数字特别敏感，一次偶然的机会，他发现了一个有趣的四位数2992，
这个数，它的十进制数表示，其四位数字之和为2+9+9+2=22，它的十六进制数BB0，其四位数字之和也为22，
同时它的十二进制数表示1894，其四位数字之和也为22，啊哈，真是巧啊。
Py非常喜欢这种四位数，由于他的发现，所以这里我们命名其为Py数。
现在给你一个十进制4位数n，你来判断n是不是Py数，若是，则输出Yes，否则输出No。
如n=2992，则输出Yes； n = 9999，则输出No。
    
分拆素数和

    描述:
    把一个偶数拆成两个不同素数的和，有几种拆法呢？
现在来考虑考虑这个问题，给你一个不超过10000的正的偶数n，
计算将该数拆成两个不同的素数之和的方法数，并输出。
如n=10，可以拆成3+7，只有这一种方法，因此输出1.
    
斐波那契数列

    描述:
    斐波那契数列为1,1,2,3,5,8...。数列从第三项起满足，该项的数是其前面两个数之和。
现在给你一个正整数n（n < 10000), 请你求出第n个斐波那契数取模20132013的值（斐波那契数列的编号从1开始）。
    
超级楼梯

    描述:
    有一楼梯共n级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第n级，共有多少种走法？ 
现在给你一个正整数n（0<n<40),请你输出不同的走法数。
如n=2,则输出1（你只有一种走法，走一步，从第一级到第二级）
    
砝码问题

    描述:
    有一组砝码，重量互不相等，分别为m1、m2、m3……mn；它们可取的最大数量分别为x1、x2、x3……xn。 
现要用这些砝码去称物体的重量,问能称出多少种不同的重量。 
现在给你两个正整数列表w和n， 列表w中的第i个元素w[i]表示第i个砝码的重量，列表n的第
i个元素n[i]表示砝码i的最大数量。i从0开始，请你输出不同重量的种数。
如：w=[1,2], n=[2,1], 则输出5（分析：共有五种重量：0,1,2,3,4）
    
取石子游戏

    描述:
    有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，
一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。
现在给出初始的两堆石子的数目a和b，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。
如果你是胜者，输出Win,否则输出Loose。
例如，a=3,b=1, 则输出Win(你先在a中取一个，此时a=2，b=1,此时无论对方怎么取，你都能将所有石子都拿走).
    
杨辉三角

    描述:
    还记得中学时候学过的杨辉三角吗？具体的定义这里不再描述，你可以参考以下的图形：
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
1 5 10 10 5 1
..............
先在给你一个正整数n，请你输出杨辉三角的前n层
注意：层数从1开始计数,每层数字之间用一个空格隔开，行尾不要有空格。
如n=2,则输出：
1
1 1
    
砝码问题II

    描述:
    有一组砝码，重量互不相等，分别为m1、m2、m3……mn；每种砝码的数量有无限个。 
现要用这些砝码去称物体的重量,给你一个重量n,请你判断有给定的砝码能否称出重量n。 
现在给你一个正整数列表w和一个正整数n，列表w中的第i个元素w[i]表示第i种砝码的重量，
n表示要你判断的重量。如果给定砝码能称出重量n，输出Yes，否则输出No。
例如，w=[2,5,11], n=9,则输出Yes（取两个2，一个5）。
    
进制转换

    描述:
    给你一个十进制数a，将它转换成b进制数,如果b>10,用大写字母表示（10用A表示，等等）
a为32位整数，2 <= b <= 16
如a=3,b = 2, 则输出11
    
Py扔铅球

    描述:
    Py不但是编程大牛，而且是运动健将。比如说扔铅球，1000m，现在Py参加校园扔铅球比赛，
给你Py的身高a（双精度数），球落地点与Py头部的连线与水平线的夹角 b（弧度），
要你编写一个程序计算Py扔铅球的水平距离。
a，b都是浮点数，注意b是弧度，其中， 140 < a < 200,  0 < b < 1.5.
输出你求出的水平距离，保留到小数点后三位。
如，a = 165.5, b=1.1, 则输出84.234
    
降序排序

    描述:
    给你一个list L, 如 L=[2,8,3,50], 对L进行降序排序并输出,
如样例L的结果为[50,8,3,2]
    
因子平方和

    描述:
    6 的因子有 1, 2, 3 和 6, 它们的平方和是 1 + 4 + 9 + 36 = 50. 如果 f(N) 代表正整数 N 所有因子的平方和, 那么 f(6) = 50.
现在令 F 代表 f 的求和函数, 亦即 F(N) = f(1) + f(2) + .. + f(N), 显然 F 一开始的 6 个值是: 1, 6, 16, 37, 63 和 113.
那么对于任意给定的整数 N (1 <= N <= 10^8), 输出 F(N) 的值.
    
神の安♂排

    描述:
    记得有一次全班去唱K, 其中有个活动是情歌对唱. 具体操作流程是这样的:
准备好 21 个阄(我们班 15 男 6 女), 其中只有两个是有标记的, 每人随意抓取一个, 最后取到有标记的阄的两个人去点首情歌对唱.
旁边一哥们儿幽幽地对我说, 看来搅基真是神的安排啊, 你看我们班的男女人数, 搅基的几率 C(15,2)/C(21,2) 刚好是 1/2.
给跪了, 这哥们儿对数字太敏感了, 简直是拉马努金转世啊. 不过我随之想到一个问题: (21, 15) 真的是神的唯一安排吗? 其实不是的,
神还有很多类似的安排. 比如 (4, 3), 显然 C(4,2)/C(3,2) 也等于 1/2, 当然还有 (120, 85) 等等等等.
神的安排太多太多了, 如果我们定义 (n, m) 是一个安排(其中 1 < m < n), 而如果 C(m,2)/C(n,2) = 1/2, 它就是神的安排.
现在的问题是, 给你一个不大于 10^9 的正整数 N, 有多少组神的安排 (n, m) 满足 n <= N 呢?
    
最长回文子串可不简单

    描述:
    记得一副有趣的对联: "雾锁山头山锁雾, 天连水尾水连天", 上联和下联都是回文的.
当然类似的还有: "上海自来水水来自海上, 山西悬空寺寺空悬西山".
回文是什么意思? 就是把内容反过来读也是和原来一样的, 譬如 abccba, xyzyx, 这些都是回文的.
然而我们更感兴趣的是在一个英文字符串 L 中, 怎么找出最长的回文子串.
例如 L = "caayyhheehhbbbhhjhhyyaac", 那么它最长的回文子串是 "hhbbbhh".
这个任务看似简单, 但是如果我告诉你 L 的长度可能会接近 10^4, 问题似乎就变麻烦了.
不管怎么说, 加油吧骚年.
    
a + b

    描述:
    给你两个数a、b，请你计算它们的和，并输出。例如： a = 3, b = 2则输出：5提示：挑战python栏目的所有题目，题目中所给变量使用前不用声明，也不用赋值，系统自动赋值。如本题，只需一行代码即可： print a + b系统会自动为a和b赋值，并检查代码执行结果和标准答案是否相同。
    
a + b

    描述:
    给你两个数a、b，请你计算它们的和，并输出。例如： a = 3, b = 2则输出：5提示：挑战python栏目的所有题目，题目中所给变量使用前不用声明，也不用赋值，系统自动赋值。如本题，只需一行代码即可： print a + b系统会自动为a和b赋值，并检查代码执行结果和标准答案是否相同。
    
那些年我们集过的卡片

    描述:
    不知道大家的童年有没有过和我相似的经历。我记得小时候经常买干脆面，不为别的，只是因为里面有一张人物卡片。
其实有很多这样的活动都有一个相同的模式：N 种人物卡片，每次买一包干脆面随机得到一张。当你集齐这 N 种人物时，就会有相应的奖励。
那时候还不懂怎么计算概率，白白给人家送了好多钱，吃了好多干脆面。
现在的任务是，给你一个正整数 N (1 <= N <= 10^4)，请你帮我从期望的角度计算平均需要买多少包干脆面才能集齐这 N 种人物。
提醒：由于结果可能不是整数，所以结果只保留到小数点后两位。
    
切西瓜

    描述:
    小Py要吃西瓜，想知道切了n刀后，最多能切出多少块？请你们帮助下小Py.
给你一个正整数n（0 < n < 10^3),你输出一个数字，代表最多能切多少块。
如n=1, 输出2。
    
换位置

    描述:
    M个人围成一圈，每分钟相邻的两个人可以交换位置（只能有一对交换）。
现在给你一个正整数n(0 < n < 1000)，求使n个人的顺序颠倒(即每个人左边相邻的人换到右边，右边相邻的人换到左边）所需的最少时间（分钟数）。
如：n=4, 输出2.
    
最小公倍数I

    描述:
    给你一个正整数list L, 如 L=[2,8,3,50], 求列表中所有数的最小公倍数(不用考虑溢出问题）。
如L=[3,5,10], 则输出30
    
正方形拼接

    描述:
    现在有一堆木棒，告诉你它们的长度，判断能否用这些木棒拼接成正方形。
注意：所有的木棒都要用上，且不能截断。
给你一个正整数list L, 如 L=[1,1,1,1], L中的每个数字代表一个木棒的长度，如果这些
木棒能够拼成一个正方形，输出Yes，否则输出No。
如L=[1,1,1,1]，则输出Yes;L=[1,1,1],则输出No。
注：数据已于2014-03-11加强，之前通过的代码可能无法再次通过
    
乘法运算

    描述:
    给你两个整数a和b（0 < a,b < 1000),按笔算的格式输出a乘以b（a是被乘数，b是乘数）的运算过程，
最后再输出一行 “********************”（二十个星号）。
乘号用小写字母“x”表示，每行末尾不能有多余的空格。具体输出格式见下面的例子：
例1：
a=89, b=13,则输出：
      89
x     13
--------
     267
     89
--------
    1157
********************
例2：
a=2, b=2,则输出：
       2
x      2
--------
       4
********************
    
平分果子

    描述:
    桌子上有一堆数量不超过20的果子，每个果子的重量都是不超过20的正整数，全部记录在列表 L 里面。小明和小红决定平分它们，但是由于他们都太自私，没有人愿意对方比自己分得的总重量更多。而果子又不能切开，所以最后他们商量好的平分方案是这样的：他们可以把某些果子扔掉，再将剩下的果子平分，请你求出在这种方案下他们每人最多可以分得的糖果重量。例如，L = [1,2,3,4,5]，则输出：7&nbsp; &nbsp; &nbsp; L = [1,3,6]，则输出：0说明：对于样例1，他们最好的方案是把重量为 1 的果子扔掉，一人分得总重量为 7 的果子；样例2无法平分果子，因此答案是0。注意：数据已于<em>2017/05/03</em>加强，原来能通过的代码不一定能够再次通过。<br />
    
IP判断

    描述:
    互联网上的每台计算机都有一个IP，合法的IP格式为：A.B.C.D。
其中A、B、C、D均为位于[0, 255]中的整数。为了简单起见，我们规定这四个整数中不允许有前导零存在，如001这种情况。
现在给你一个字符串s(s不含空白符),请你判断s是不是合法IP，若是，输出Yes,否则输出No.
如：s="202.115.32.24", 则输出Yes;  
    s="a.11.11.11", 则输出No.
    
RSA密码方程

    描述:
    在RSA密码体系中,欧几里得算法是加密或解密运算的重要组成部分。它的基本运算过程就是解 (x*a) % n = 1 这种方程。
其中，x,a,n皆为正整数。现在给你a和n的值(1 < a,n < 140000000)，请你求出最小的满足方程的正整数解x（保证有解）.
如：a = 1001, n = 3837，则输出23。
    
排队

    描述:
    全班N（2<=N<=45）个人排成一排，但因为高矮不齐，需要进行调整。调整的方法是，不调换左右次序，只让若干人后退一步变为第2排，使第一排留下的人从左到右的身高按降序排列，即右边的人不比左边的人高。如果第2排的人还不按降序排列，则照此办理，即再让第2排的若干人后退一步变为第3排，这样继续下去，直到所有排的人都按身高从高到低排列。
现在将每个人的身高保存在列表L中，给你L，请你找出一种使第一排留下的人数尽可能多的调整方法，输出第一排留下的人数P及最后调整完共有几排数K，P和K之间以一个空格隔开。
如，L=[130, 122, 112, 126, 126, 125, 120, 100],则输出6 2。
    
101位自复制数

    描述:
    什么叫自复制数呢？我们看看下面的例子：
625×625=390625
376×376=141376
9376×9376=87909376
90625×90625=8212890625
如果一个数的平方末尾还是这个数本身，那么它就是自复制数。
现在告诉你长度为101位的自复制数只有一个，你能把它找出来吗？请输出这个101位的自复制数。
    
阶乘

    描述:
    N的阶乘定义为：N!=N×(N－1)×……×2×1
请编写一个程序，输出N的阶乘的十进制表示中从最末一个非0位开始自低位向高位数的第K位。
现在给你N和K（0<=N<=10000，1<=K<=5），请你输出要求的数字(保证存在）。
例如：N=5,K=2,则输出1   note:（5!=120);
      N=8,K=3,结果为0   note:（8!=40320）
    
回文数 I

    描述:
    若一个数（首位不为0）从左到右读与从右到左读都是一样，这个数就叫做回文数，例如12521就是一个回文数。
给定一个正整数，把它的每一个位上的数字倒过来排列组成一个新数，然后与原数相加，如果是回文数则停止，如果不是，则重复这个操作，直到和为回文数为止。给定的数本身不为回文数。
例如：87则有：
STEP1: 87+78=165
STEP2: 165+561=726
STEP3: 726+627=1353
STEP4: 1353+3531=4884
现在给你一个正整数M（12 <= M <= 100),输出最少经过几步可以得到回文数。如果在8步以内（含8步）不可能得到回文数，则输出0。
例如：M=87，则输出4.
    
最大整数

    描述:
    设有n个正整数,将他们连接成一排,组成一个最大的多位整数.
例如:3个整数13,312,343,连成的最大整数为:34331213
又如:4个整数7,13,4,246连接成的最大整数为7424613
现在给你一个正整数列表L，请你输出用这些正整数能够拼接成的最大整数。
note:测试数据已于2014年11月13日更新，以前通过的代码不一定能够再次通过。
    
回文数 II

    描述:
    又是回文数！但这次有所不同了。
给定一个N进制正整数，把它的各位数字上数字倒过来排列组成一个新数，然后与原数相加，如果是回文数则停止，如果不是，则重复这个操作，直到和为回文数为止。
如果N超过10，使用英文字母来表示那些大于9的数码。例如对16进制数来说，用A表示10，用B表示11，用C表示12，用D表示13，用E表示14，用F表示15。
例如：10进制87则有：
STEP1: 87+78=165
STEP2: 165+561=726
STEP3: 726+627=1353
STEP4: 1353+3531=4884
给你一个正整数N(2<=N<=16)和字符串M（"1"<=M<="30000"(10进制)）,表示M是N进制数，输出最少经过几步可以得到回文数。
如果在30步以内（含30步）不可能得到回文数，则输出0。输入的数保证不为回文数。
如N=10, M="87", 则输出4.注意：M是以字符串的形式给定的。
    
球迷购票问题

    描述:
    球赛门票的售票处规定每位购票者限购一张门票，且每张门票售价50元。购票者中有m位手持50元钱币，另有n人手持100元。假设售票处开始售票时无零钱。问这m+n人有几种排队方式可使售票处不致出现找不出钱的局面。
对给定的m,n(0<=m,n<=5000)，计算出排队方式总数。
    
分解 n!

    描述:
    给你一个数 n (1 < n <= 1000000) ,求 n! (n的阶乘)的质因数分解形式.
质因数分解形式为:
n=p1^m1*p2^m2*p3^m3……
* 这里 p1 < p2 < p3 < …… 为质数
* 如果 mi = 1, 则   ^ mi   就不需要输出 
如：n=6,则输出：6=2^4*3^2*5
    n=7,则输出：7=2^4*3^2*5*7
    
C(n,k)

    描述:
    求组合数 C ( n , k) 的奇偶性.
给你n和k(1<=n<=10^9,0<=k<=n),若其为奇数，则输出1，否则输出0.
如n=2,k=0,则输出1. 因为C(2,0)=1,为奇数。
    
百度时间

    描述:
    Baidu的服务器上使用的不是北京时间，而是Baidu时间。Baidu时间的时分秒与北京时间相同，
但是日期与北京时间不同，是用一个正整数表示从2000年1月1日开始经过了几天。
现在就请大家设计一个程序将北京时间转换为百度时间。在本题中，闰年的年份是400的倍数，
或者是4的倍数但不是100的倍数。比如2000和8888均为闰年，但6100不是。
现在给你一个字符串stime,表示待转化的北京时间（不含空格和TAB），正确的格式有两种：
一种为：YYYY-MM-DD，（YYYY表示四位数年份，MM为两位月份，DD为两位日期）；
另一种为：MM/DD/YYYY，（YYYY表示四位数年份，MM为两位月份，DD为两位日期）；
若给定的stime是正确的时间，则输出转换后的结果（一个整数）；
否则输出Error。
如：stime="2000-01-01",则输出0
    stime="AStar2007",则输出Error
    stime="1999-12-31",则输出-1
    
QQ音速

    描述:
    最近Py开始玩qq音速，这个游戏只需要按4个键，上，下，左，右（分别用u,d,l,r表示）。
Py必须按照游戏规则，依次按下一系列键。问题是Py的手太胖了，他只能把两个手指放在方向键上。
Py把一个手指从键i移动到键j，要耗费w[i][j]的体力，而按键不需要耗费体力。
由于Py反应比较慢，所以他每次只能移动一个手指。现在可怜的Py问你，他最少耗费多少体力？
假设Py一开始就把手指放在左、右两个键上。 

下面是w[i][j]数组 
  u d l r 
u 0 1 2 2 
d 1 0 1 1 
l 2 1 0 2 
r 2 1 2 0 
现在给你一个仅由0,1,2,3(分别表示u,d,l,r)组成的字符串str,表示Py需要依次按下的键,串的长度不超过10^6.
请你输出Py最少需要耗费的体力值。
如：str="01230123", 则输出8。
    
寻找最小的数

    描述:
    现在我们手里有一张2维的正整数(包括0)表.
对于第i行第j列的那个数我们有如下定义：
a[i][j]是 a[i][k]{其中0<=k<j}和a[k][j]{其中0<=k<i}没有出现的那个最小的正整数
比如a[0][0]=0;
现在给你两个非负整数x,y,（0 <= x,y <= 10^9),请你输出a[x][y]的值。
如：x=0,y=0, 则输出0
    x=0,y=1, 则输出1
    x=1,y=0, 则输出1
    x=1,y=1, 则输出0
    
滑雪比赛

    描述:
    我们把场地分为一个个的格子，给每个格子标定一个整数，代表这个格子所代表的地面的海拔高度。
比赛的参赛者可以从任意一个格子开始，但只能向相邻的四个格子移动，并且目地格子的高度必须
小于现在所在格子的高度。我们假设从一个格子滑行到另一个格子所用的时间为1个单位时间。
现在告诉你滑雪场的大小为n*m, 并给你一个n行m列的整数二维列表H，表示每个格子的海拔高度。
请你计算出在这个场地上最长能滑行多少时间。
如：
n = 4
m = 4
H= [
    [1, 2, 3, 4],
    [5,6,7,8],
    [9,10,11,12],
    [13,14,15,16]
    ]
则输出 6.

    
考古学家的困境

    描述:
    一个考古学家正在发掘古代的一座城市时，不小心被一个部分毁坏的石墙绊倒了。
那个石墙上有数行奇异的数。这些数的前几位完整无缺，但不幸地，其余位的数字由于侵蚀作用而无法辨认。
尽管如此，他注意到每一行完好的数字都像是2的幂的前几位，他就猜想这个石墙上原先的所有数都是2的幂。
为了验证自己的想法，他选择了能看清楚的一些数写成列表，并把列表交给你，
请你求出最小的2的幂使幂的前若干位与他提供的列表中的数一致。
所以你必须写一个程序，对于给定的整数N(1 <= N <= 100)，求出最小的指数E使这个数的前若干位与N相同。
注意：N的长度必须小于2^E的长度的一半。如N＝1，当E等于4时，虽然2^4=16,
但因为1的长度等于16的长度的一半，所以不满足题上的条件，而只有在E等于7时，2^7=128才满足题意。
因此，N = 1时， 输出7
    
单词接龙

    描述:
    今天说的单词接龙不是传统意义上的单词接龙。我们的游戏如下：
给你两个词，a和b，现在请你经过一系列转换，将a转换成b。
转换规则：每个词在转换的时候，只能修改其中一个字母（不能删除或者插入），
转换过程中得到的词必须是正确的词（在词典中存在的词）
例如：我们想把单词spice转换成stock，可能的一个转换序列为：
spice -> slice -> slick -> stick -> stock, 一共需要四步。
现在给你一个词典L，L中定义了所有合法的单词，L是一个由字符串构成的列表；
同时给你两个单词a和b，请你计算从a转换到b至少需要经过多少步。
若无法成功转换，则输出-1.
如：
L = ['spice', 'slice', 'slick', 'stick', 'stock', 'ipad']
a = 'spice', b = 'stock', 则输出4
    
买苹果

    描述:
    小明的妈妈买了N个苹果，想把它们都分给她的M个孩子。为了公平起见，
她想让所有的孩子都分到一样多的苹果。那么她至少要再买多少个苹果呢？
如：N=3, M=1, 则输出0
    N=3，M=2，则输出1
    
数字漩涡

    描述:
    给你一个正整数N，请你输出大小为NxN的数字漩涡。数字漩涡的定义请看下例。
N=3，则输出：
1 2 3
8 9 4
7 6 5

N = 4，则输出：
1  2   3  4
12 13 14  5
11 16 15  6
10  9  8  7

注意：每行数字之间以一个空格隔开，行尾不要有多余的空格。
    
Py的函数I

    描述:
    要过年了，Py闲着无聊，自己定义了一个函数F(n)=3*F(n-1)+2*F(n-2)+1，定义F(0)=1,F(1)=3.
现在给你一个整数n(0 <= n <= 1000)，请你计算F(n).由于这个值可能会非常大，
因此请你输出F(n)取模20132013之后的结果。

    
Py的函数II

    描述:
    这次的问题和上个题目《Py的函数I》相同，不过现在要求的n很大（0 <= n <= 1000000000).
请你输出F(n)取模20132013之后的值。
    
异或求和

    描述:
    给你一个正整数N（1 <= N <= 100000000000000000),求1^2^3^...^N的值。A^B表示A和B按位异或。
如N=3， 则输出0.
    
修剪数列

    描述:
    给你一个整数数列a1,a2,a3,...,an,请你修改（不能删除，只能修改）最少的数字，使得数列严格单调递增。
数列存储在列表L中，你可以直接使用L，L的长度小于100000。
注意：必须保证修改后的数列依然是整数序列，不能修改成小数。
例如：L=[1,3,2],则输出1
Note:数据已于2014-12-3加强， 原来能通过的代码可能无法再次通过。
    
质数的数目

    描述:
    给你一个正整数N(1 <= N <= 10000000)，求{1,2,3,...,N}中质数的个数。
如N=3， 输出2.
    
数字转换

    描述:
    转换规则：如果数字d是x的约数，则x可以被转换为x+d。
现在给你两个正整数a和b，请你计算最少需要多少步能够将a转换成b。如果不能转换，则输出-1.
如：a = 1， b = 6, 则输出3.（1→2→4→6 或 1→2→3→6）
note:测试数据已于2014年11月13日更新，以前通过的代码不一定能够再次通过。
    
整数表示

    描述:
    在IA32上无符号的整型变量在内存中是“倒”存储的，如一个整数: 305419896 换算成 16进制
是0x12345678， 在内存中从低地址到高地址的4个字节里的数据分别是 0x78 0x56 0x34 0x12 。
你的任务是对于每个输入n, 输出其在内存中从低地址到高地址的存储数据。 表示十六进制数用到
字母时，一律大写。如: 不能输出 0x1d，而要输出 0x1D。 每字节之间用空格分开。
如：n=0,则输出：0x00 0x00 0x00 0x00
    n=5987456,则输出：0x80 0x5C 0x5B 0x00
    
放棋子

    描述:
    有一种大小为n x n的网格棋盘,棋盘中某些格子内有障碍物。
现在将棋盘的状况告诉你，请你求出最多可以在棋盘上放置多少棋子，保证放置的棋子
在同一行、同一列不会直接面对（中间无障碍物分隔，则为直接面对）。
棋盘的状态用一个字符串列表L告诉你，一个4x4的棋盘的例子如下：
L=[".X..",
   "....",
   "XX..",
   "...."]
其中，X表示该位置有障碍物，.表示该位置无障碍物，棋子只能放在没有障碍物的地方。
现在给你n和L，请你输出最多可以再棋盘上放置的棋子个数。
如：
n=4,
L=[".X..",
   "....",
   "XX..",
   "...."]
则输出5
    
全排列

    描述:
    给你一个仅有小写字母组成的字符串s（len(s) < 10)，请你输出s内的所有字母的全排列，每行输出一个，
按照字典序升序输出。
如：s="bbjd",则输出：
bbdj
bbjd
bdbj
bdjb
bjbd
bjdb
dbbj
dbjb
djbb
jbbd
jbdb
jdbb
    
解析HTML

    描述:
    我们每天都在浏览网页，HTML是网页的基础，现在请你模拟解析简单的HTML代码。
我们这里定义的HTML只包括两个特殊标记
排序的精髓

    描述:
    给你一个整数list L,现在只允许你有一种操作：交换列表中相邻的两个元素。
对于一个给定的L，请你输出至少需要多少次交换可以让L变成升序序列。
如：L=[2, 8, 0, 3],则输出3。
注解: 2 8 0 3
swap (8 0)=> 2 0 8 3
swap (2 0)=> 0 2 8 3
swap (8 3)=> 0 2 3 8
    
整数划分

    描述:
    给你一个正整数N，请你求出一共有多少种方式用不超过N的正整数求和得到N。
例如：
N=4，则输出5.因为4只有如下五种求和方式：
4 = 4
4 = 3 + 1
4 = 2 + 2
4 = 2 + 1 + 1
4 = 1 + 1 + 1 + 1
    
数字序列

    描述:
    数字序列定义如下：
f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) % 7.
现在给你A，B和n（1 <= A,B <= 1000, 1 <= n <= 1000000000)，请你计算f（n）的值。
    
Py的寻路系统

    描述:
    Py是个没有方向感的人，经常在校园内迷路，所以他经常手里拿着一张地图。每天Py都在校园内转来转去，但是Py不是一个喜欢浪费时间的人，每次转悠的时候，他总想找到一条从起点到终点的最短路。现在这个任务就交给了你，希望你给Py设计一个查询系统，Py每次只需要输入起点和终点，你就要告诉Py这两点间的最短路的长度是多少。
现在给你两个整数n和m以及一个三元组列表L，n表示地图上路口的数目，m表示地图上小路的个数，
其中1 <= n <= 100，0 <= m < n(n-1)/2。
列表L由m个三元组构成，每个三元组[a, b, len]表示一条连接路口a和路口b的小路，小路长为len，路口的编号从1开始，即 1 <= a,b <= n,这里的路都是双向的，没有一条路是连接两个相同的路口。
现在Py想从s路口到t路口，请你输出s路口到t路口的最短路径的长度，若不可达，则输出-1.
例如：
n=3,m=3
L=[[1,2,1],[2,3,1],[1,3,1]]
s=1, t=2
则输出1，即从路口1到路口2的最短路径长度为1.
    
圆的面积

    描述:
    给你两个圆，每个圆由三个参数表示，x,y,r, 其中(x,y)表示圆心坐标，r表示半径。
现在给你这两个圆的参数，x1, y1, r1; x2,y2,r2, 请你求出这两个圆相交部分的面积，保留小数点后三位数。
如：
x1=20.0,y1=30.0,r1=15.0,x2=40.0,y2=30.0,r2=30.0
则输出608.366。
    
寻找临界楼层

    描述:
    你是国际民用压缩技术公司（International Civil Pack-technical Company, ICPC）的产品测试员。
现在你有一项任务：测试包有特殊缓冲材料的玻璃围棋子的牢固度。
如果围棋子从某个足够高的楼层落下来就会碎，但如果没有碎，缓冲材料会自动修复损伤部分，
也就是说如果从6楼落下来不碎，从6楼把同一颗棋子丢1000次，它都不会碎（当然在现实中，围棋子从手中多落下几次就会碎）。
我们定义一个临界楼层：围棋子从这个楼层或更高落下来会碎，且围棋子从任何比这个楼层低的楼层落下都不会碎。
如果棋子从1楼丢下来也碎了，临界楼层就是1。
你的任务就是利用你面前这座偶然发现的大厦，寻找手中这种围棋子的临界楼层。
当然，大厦不一定足够高，我们规定如果你从最高层丢棋子仍然没有摔碎棋子，还是算找到了临界楼层。
策略1：如果你只有1颗棋子，那你不得不从1楼开始尝试丢，如果没碎就到2楼丢，还没碎就到3楼丢……
直到棋子碎了，那你现在所在的楼层就是临界楼层（显然这是只用一颗棋子确保能发现临界楼层的唯一方法）。
策略2：你现在有两颗棋子，你可以从10楼开始试，每次上升10层，直到第1颗棋子碎了（比如在60楼）；
然后用策略1，从51楼开始用第2颗棋子1层层试上去。这样，如果大厦共100层，你最多只要试20次就能找到这个临界楼层。
但是这不是最佳策略：最佳策略最多只要尝试14次（最佳策略指的是在最坏情况下能用最少次数测出临界楼层的策略）。
现在给出你面前的大厦的楼层数。请你构思出最佳测试策略，用你手中的两颗棋子最多测几次就能确保找到那个临界楼层？
（注意：正如刚才提到的，因为大厦不一定足够高，即使在100层的大厦里你从99层丢棋子没有摔碎，
也不能认定100层一定是临界层，而至少要到100层丢一次。当然，这一次无论棋子是否摔碎都算是找到了临界层）。
现在给你楼层的高度n，输出对于高度为n层的大厦而言测量临界楼层的最佳策略所需的最多次数。
如n=5, 则输出3.
    
编辑距离

    描述:
    设 A 和 B 是 2 个字符串。要用最少的字符操作将字符串 A 转换为字符串 B。
这里所说的字符操作包括
(1)删除一个字符；
(2)插入一个字符；
(3)将一个字符改为另一个字符。
将字符串 A 变换为字符串 B 所用的最少字符操作数称为字符串 A 到 B 的编辑距离，记为d(A,B)。
试设计一个有效算法，对任给的 2 个字符串 A 和 B，计算出它们的编辑距离 d(A,B)。
如：
A="fxpimu"
B="xwrs"
则输出5.
    
计算GPA

    描述:
    每门课程的成绩分为五个等级：A,B,C,D,F(注意没有E),它们分别代表可以获得4,3,2,1,0个绩点.
现在给你一个由大写字母构成的列表L，请你计算平均绩点，保留小数点后两位。
若L中包含非法成绩等级，则输出-1.
如：
L = ["A", "B", "C", "D", "F"]
则输出2.00
    
史上最简单的计算

    描述:
    来放松一下，这是个不能再简单的问题。给你两个数a，b, 请你输出a+b和a-b的值，用一个空格隔开。
如：a=3,b=2,
则输出：5 1
    
又是字符串

    描述:
    给你一个长为N的字符串A: A0 A1 A2 A3 ...... AN-1
S(0)   = A0 A1 A2 A3 ...... AN-2 AN-1 
S(1)   = A1 A2 A3 ...... AN-2 AN-1 A0 
S(2)   = A2 A3 ...... AN-2 AN-1 A0 A1 

......

S(N-1) = AN-1 A0 A1 A2 A3 ...... AN-2 
请你求出有多少个不同的i（0 <= i <= N - 1) ,使得S(i)和S(0)相等。
如：
A="aaa"
则输出：3
    
输出交换次数

    描述:
    给你一个list L, 如 L=[2,8,3,50], 对L进行选择排序并输出交换次数,
如样例L的结果为1
    
Python之殇

    描述:
    今年为什么Python这么火?因为今年是Python（英文意思是蛇）年！可是，可是蛇年就要结束了，但我们的Python会继续进行下去，我们期盼着下一个Python之年的到来。
我们迫切的想要知道，哪年是Python年。现在的任务是，给你一个四位的纯数字字符串year,表示农历的年份，请你判断该年是否是Python年。
若是，输出'Oh yeah,Python Year!'(不包括引号），
否则输出'Oh my god,Not Python Year!'(不包括引号）.
例如：
year = '2013'
则输出：Oh yeah,Python Year!
year = '2014'
则输出：Oh my god,Not Python Year!
    
勇气的挑战

    描述:
    给定n个点的坐标(x,y,z),且n<=50,从点1出发,怎么样才能走一条路径,访问每个点一次且仅一次,使走过的距离和最小? 
现在给你一个list列表L，列表中每个元素是个三元组[x,y,z]（x,y,z都是整数）,表示坐标系上的一个点，列表长度不超过50.
请你输出从第一个点（即L[0])出发，走完L中每个点的最小距离（保留小数点后1位小数）。
例如：
L = [[0,0,0], [1,1,0], [1,-1,0]]
则输出：3.4
    
LTC-男人八题之一：连通图

    描述:
    LTC不知道是谁？百度去！楼天成是也，楼教主当年提出来的男人八题系列，可谓经典中的经典。
言归正传，本题的任务是，请你计算，具有n个节点的无向连通图有多少种不同的形态。n是一个正整数，1 <= n <= 50,请输出结果。
如：
n=3时，输出：4
note：n=3，有如下四种不同的无向连通图
A-------B     A-------B      A       B       A-------B
 .    .        .              .     .               .
   . .           .              . .                .
    C             C              C                C
其中，'.'和'-'画出的线表示无向图的边，A,B,C表示三个顶点。
    
LTC-男人八题之二：古老的取石子游戏

    描述:
    游戏的开始有n个排成一条线的石子堆，游戏的目标是将这些堆石子合并成一堆，合并的规则如下：
Rule:每一步，游戏玩家只能合并相邻的两堆石子，得分是被合并的两堆石子数目之和。
你的目标是求出合并所有石子能够得到的最小得分之和。
给你一个正整数列表L,L中每个数字表示对应石子堆的石子数目，如L[0]表示第一个石子堆的石子数目，请你输出合并的最小得分之和。
如：
L=[100],则输出0
L=[3, 4, 3], 则输出17.
    
LTC-男人八题之三：旅游线路问题

    描述:
    给你一张基于网格的M x N的城镇地图（1≤M, N≤8），有些格子禁止入内，用“#”表示，其余格子用“.”（一个点）表示。
现在你需要求出从左下角走到右下角，并且经过所有可以入内的格子一次且仅一次的路径的总数。
给你一个二维List L，表示城镇地图, L中的每个元素为'#'或'.',表示含义如上所述（注意N和M没给，可以由L得到)。
如：
L = [
      ['.', '.'],
      ['.', '.']
    ]
此时的地图为：
..
..
输出：1
L = [
      ['#', '.', '.'],
      ['.', '.', '.']
    ]
此时的地图为：
#..
...
输出：1
    
LTC-男人八题之四：新式取石子游戏

    描述:
    小明和小红参加一种新的取石子游戏。游戏开始时有 n （1 <= n <= 10)堆石子，参与游戏的两个选手轮流取走或移动石子。在每一轮中，选手选择一个石子堆，从该堆石子中拿走至少一个石子。然后，该选手可以多次地从该堆中剩下的石子中把任意多的个石子移动到其它堆中。当然，该选手也可以不移动任何石子。但是，注意，选手必须从选中的堆中取走至少一块石子。因此，随着游戏的进行，石子越来越少, 最后一个取完石子的人获胜。
现在给你一个正整数list L(L的长度不超过10），每个元素代表相应石子堆石子的数目，如L[0]代表第一堆石子的数目，
小明和小红都极其聪明，总能以最优的策略进行游戏。游戏从小明开始，请你判断小明能否在游戏中获胜？
若能获胜，输出：Yes否则输出：No
如：L = [2, 1, 3], 则输出Yes
    L=[1, 1], 则输出No
    
LTC-男人八题之五：树

    描述:
    给你一个含有n个顶点的无向树，树上每条边都有一个长度p(p是不超过1001的正整数).
定义dist(u, v)表示节点u到v的最短距离。给你一个k，请你求出树上满足dist(u, v) <= k的点对数目，注意u不能和v相同。
给你一个正整数k和二维List L, 其中L中的每行是一个三元组[u, v, p],表示一条边,其中u和v表示节点，p表示长度，请你求出满足条件的点对数目。
    
LTC-男人八题之六：硬币组合

    描述:
    小Py手里有面值为A1,A2,A3...的硬币若干枚，现在他想知道，用手里的硬币能够拼凑出多少种不超过m的不同钱数的数目。
给你一个正整数m(m <= 100000)和两个等长的正整数List L1和L2(L2[i] <= 1000), L1中的元素表示硬币的面值， L2中的元素表示对应面值硬币的数目，即L2[i]表示小Py拥有的面值为L1[i]的硬币个数。
请你输出小Py利用手中的硬币能够拼凑出的不同钱数的数目。
如：
L1 = [1, 4], L2 = [2, 1], m = 100, 则输出：4
    
LTC-男人八题之七：音乐旋律

    描述:
    给定一个正整数序列L（L的长度不超过20000，1<=L[i]<=88)，问这个序列中存在的最长一个符合下列三个条件的子序列长度是多少：
条件1：子序列A的长度不小于5
条件2：存在另一个子序列B，且A和B不重叠
条件3：A和B的长度一样，且A[0]-B[0] = A[1]-B[1] = ... = A[k]-B[k],及两个子序列对应项的差相等。
请你输出符合条件的最长的子序列A的长度。
如：L = [25, 27, 30, 34, 39, 45, 52, 60, 69, 79, 69, 60, 52, 45, 39, 34, 30, 26, 22, 18, 82, 78, 74, 70, 66, 67, 64, 60, 65, 80]，则输出：5


    
LTC-男人八题之八：电梯调度

    描述:
    有一栋楼, 里面只有一架电梯. 电梯上一层需 4s,停下是瞬时的，再次启动（不含从1楼的那次启动）要10秒, 人上下一层楼都要20秒.
现在电梯初始在一楼，所有人也都在一楼，告诉你人群需要到达的楼层情况, 求一个安排计划,使最后到达自己目的地的人的用时最短(1 层和最后一层的等待不计时).
现在给你一个正整数List L，L[i]表示有人的目的地在第L[i]层，L的长度不超过300000， 2 <= L[i] <= 30000 ,请你输出最后一个到达目的地的人所用的最短时间.
如：L = [4, 5, 10], 则输出：46
    说明：此时的安排：需要在四楼和五楼下的人都在四楼下，10楼的人在10楼下。
    此时，各层人用时：4楼：12s  5楼：12 + 20 = 32s， 10楼：9 * 4 + 10 = 46s， 最后一个到达目的地的人用时为46s
    L = [2], 则输出：4
    
结尾0的个数II

    描述:
    给你两个正整数n（1 <= n <= 1000000)和m（2 <= m <= 100), 请你计算n!转换为m进制后末尾0的个数。
如：
n = 10, m = 10, 则输出2.
    
结尾0的个数III

    描述:
    给你两个正整数n（1 <= n <= 1000000000000000000)和m（2 <= m <= 100), 请你计算n!转换为m进制后末尾0的个数。
如：
n = 10, m = 10, 则输出2.
    
日期计算

    描述:
    给你一个日期的字符串s，s的格式为 ‘yyyy-mm-dd’（保证给定的日期合法）， 请你输出该日期是该年份的第几天，第几周,用一个空格隔开这两个数字。
注意，天和周都从1开始计数。一周的开始是周日，结束是周六，例如2014-01-04是周六（这是2014年的第一周的最后一天），2014-01-05是周日（这是第二周的开始）。
例如：
s = '2014-01-01', 则输出：1 1
s = '2014-01-05', 则输出：5 2

Note:感谢@hhbsng指出，python系统的时间库有bug，例如，对于1989，给出的周数有误。数据已更新，之前利用时间库直接解的代码无法再次通过本题 （2015/6/15)。
    
因数（来自2013年ACM-ICPC世界总决赛）

    描述:
    数论的基本定理指出，对于任意大于1的整数，总有唯一的质因数分解。但是质因数的组合形式通常不止一种：
如：
10 = 2×5 = 5×2
20 = 2×2×5 = 2×5×2 = 5×2×2
设f(k)为组合的个数，有f(10) = 2, f(20) = 3 .
给定正整数n（0 < n < 1000) ，总存在至少一个k，使得f(k) = n .
求满足条件的k的最小值。
如：n=1,则输出2。 因为2=2 只有一种分解形式,故f(2)=1,且2是满足条件的最小的整数，故输出2。
    
约瑟夫问题

    描述:
    约瑟夫问题：有ｎ只猴子，按顺时针方向围成一圈选大王（编号从１到ｎ），从第１号开始报数，一直数到ｍ，数到ｍ的猴子退出圈外，剩下的猴子再接着从1开始报数。就这样，直到圈内只剩下一只猴子时，这个猴子就是猴王，现在给你n和m，请你输出最后猴王的编号。
    
矩阵乘方和

    描述:
    给定一个n*n的矩阵A,正整数k以及正整数m(n<=30,k<=1000000000,m<=10000),请求出S=A+A^2+A^3+A^4+...+A^k的值.A^x表示x个A相乘的结果. 输出矩阵S对m取模后的值,包括n行,每行n个数，每行数字之间以一个空格隔开。
A是一个二维列表，例如：
n=2, k=2, m=4,A=[[0,1],[1,1]]
则输出：
1 2
2 3
    
木棒问题

    描述:
    小Py有n根长度不同的木棒,有一天它把所有的木棒排成一行,用S1,S2,S3,...,Sn表示.量出每个木棒的长度Sk(1<=k<=n),它发现有两个木棒Si和Sj(1< = i < j < = n),它们之间的所有木棒都比Si要长比Sj短. 
现在给出每个木棒的长度,你需要找到满足上述条件的两个木棒Si和Sj,使得j-i最大. 木棒的长度存放在列表L中，请你输出满足条件的j-i的最大值，如果不存在，则输出-1。
如：L = [5,4,3,6], 则输出：1。
    
地板覆盖

    描述:
    用规格为2*1的瓷砖覆盖大小为3*n的地板有多少种方案(必须完全覆盖地板，且不能破坏单个瓷砖）？ 现在给你正整数n（0<n<=30),请你输出可能的方案总数。
如n=2, 则输出3。
    
基因串

    描述:
    基因串是由一串有限长度的基因所组成的，其中每一个基因都可以用26个英文大写字母中的一个来表示，不同的字母表示不同的基因类型。一个单独的基因可以生长成为一对新的基因，而可能成长的规则是通过一个有限的成长规则集所决定的。每一个成长的规则可以用三个大写英文字母A1A2A3来描述，这个规则的意思是基因A1可以成长为一对基因A2A3。 
用大写字母S来表示一类称作超级基因的基因，因为每一个基因串都是由一串超级基因根据给出的规则所成长出来的。 
给你若干成长的规则和一个目标基因串，对于每个基因串，请你判断它是否可以由一个有限长度的超级基因串成长得出。如果可以，输出可成长为该基因串的最短超级基因串的长度，否则输出-1。
成长规则存储在列表L中， 目标基因串为dest。例如：
L=["BCA","ABC","SAB"], dest="BCCA", 则输出1。 Note：S->AB->BCB->BCCA 
    
最小覆盖

    描述:
    给出一些区间[Li,Ri],请你找到这些区间的一个子集,使得子集里的区间完全覆盖[0,M].
现在给你一个正整数M(1<=M<=50000)，和一个二维整数列表L，L中的每个元素是一个二元列表[Li, Ri],(其中|Li|<=50000,|Ri|<=50000)。
请你输出一个整数，表示最少需要多少个区间覆盖[0,M]，如果无解,则输出"No solution".
如：
M = 1
L = [[-1, 0], [0, 1], [0, 0]]
则输出：
1
。
    
田忌赛马

    描述:
    田忌和齐王要进行赛马，每匹马都有一个武力值（正整数），武力值大的马能赛过武力值小的马。如果他们各有n匹马，齐王让他的马按从优到劣的顺序出赛，田忌可以按任意顺序选择他的赛马出赛。赢一局，田忌可以得到200两银子，输一局，田忌就要输掉200两银子，平局的话不输不赢。 
请问田忌最多能赢多少银子?
现在给你两个整数列表la和lb(列表长度不大于1000)，la中的元素分别表示田忌的马的武力值，lb中的元素表示齐王的马的武力值，请你输出一个整数，表示田忌至多可以赢多少银子，如果田忌赢不了，就输出一个负数，表示田忌最少要输多少银子。
如：
la = [92, 83, 71]
lb = [95, 87, 74]
则输出：
200
。
    
木棒分割

    描述:
    Py要把一根长木棒分割成n段,首先把长木棒分割成两段,然后每次从分割出来木棒中取出一根来分割成两段,最后得到n段.把一根长为m的木棒分成两段的费用为m.Py希望分割的费用尽可能少,请你找到这个最小费用..
给你一个正整数n(1<=n<=2000，表示分割成多少段)和一个长度为n的正整数列表L(L中的元素表示分割成的每一段的长度),长木棒的长度等于这n个数的和,分割中不会有损失.
请你输出一个正整数，表示分割所需的最少总费用。
如：
n = 5
L = [1,2,3,4,5]
则输出：
33

提示：原始木棒的长度为15,首先分割为6和9两段(费用15),然后把长为9的分成4和5两段(费用9),接着把长为6木棒分为3和3两段(费用6),最后把长为3的一段分为1和2两段(费用3). 
总费用为:15 + 9 + 6 + 3 = 33
    
编码问题

    描述:
    给你一个UTF-8编码的汉字s, 请你输出该汉字对应的GBK编码。一个汉字的GBK编码为两个字节，你请输出编码的十六进制值（若有字母，输出小写形式)，两个字节之间以一个空格隔开。
如：s = '你',
则输出：
c4 e3
。

    
数数

    描述:
    给你一个正整数n(0 < n < 1000000), 请你输出0到n之间“1”出现的次数。
例如 n = 4时， [1, 2, 3, 4]出现了1个"1",因此输出1
     n = 12时，[1,2,3,4,5,6,7,8,9,10,11,12]出现了5个"1"， 因此输出5
    
数数II

    描述:
    给你一个正整数n(0 < n < 10^20), 请你输出0到n之间“1”出现的次数。
例如 n = 4时， [1, 2, 3, 4]出现了1个"1",因此输出1
     n = 12时，[1,2,3,4,5,6,7,8,9,10,11,12]出现了5个"1"， 因此输出5
    
特殊的9位数

    描述:
    1~9的9个数字， 每个数字只能出现一次， 要求这样的9位数：其第一位能被1整除， 前两位能被2整除， 前三位能被3整除...依次类推，前9位能被9整除。所有的9位数中，只有一个数字满足这些条件，请你输出这个9位数。
    
整数编码

    描述:
    我们的编码规则为：1到26之间的26个数据，可以编码为对应的’A'-’Z'。
现在给你一个纯数字字符串s(s的长度不超过150)，请你输出该串有多少种编码方式（所有输入至少有一种编码方式）。
例如：
s='121', 则输出：3
s = '101', 则输出：2
Note:'121'对应的三种编码分别为：ABA(1,2,1), AU(1,21), LA(12,1).
     '101'对应的两种编码分别为：AA(1,01), JA(10, 1).
    
新年祝福

    描述:
    新年将至，PythonTip提前祝大家新年快乐，心想事成^_^。 
输入：无
输出：Happy New Year, wow!
    
变态超级楼梯

    描述:
    有一楼梯共n级，刚开始时你在第零级，若每次你可以上1级，也可以上2级，...，也可以上n级。要走上第n级，共有多少种走法？ 
给你一个正整数n(1 < n < 1000), 请你输出答案。
例如： n = 2
输出：2
    
完美数

    描述:
    把只包含因子2、3和5的数称作完美数。例如6、8都是完美数，但14不是，因为它包含因子7。
习惯上我们把1当做是第一个完美数。求按从小到大的顺序的第n个完美数。

给你一个正整数n (1 <= n <= 1500),请你输出答案。
例如：n=3
则输出：3
    
小Py的计算器

    描述:
     以往的操作系统内部的数据表示都是二进制方式，小Py新写了一个操作系统，系统内部的数据表示为26进制，其中0-25分别由a-z表示。
现在小Py要在这个操作系统上实现一个计算器，这个计算器要能实现26进制数的加法运算。你能帮小Py实现这个计算器吗？

给你两个表示26进制数的字符串s1和s2, 每个数的位数最多为10位,我们可以保证相加的结果的位数最多也是10位。 每个数会用小Py所设计的操作系统中的表示方法来表示，如：bsadfasdf。即每个数的各个位均由26个小写字母a-z中的一个来表示。 请你输出s1和s2相加的结果，结果也用题目中描述的26进制数表示。

例如：s1='ba', s2='cd'
则输出：dd
Note:如果结果有前导0（即前导a),请输出时过滤掉前导0.
    
完美数II

    描述:
    把只包含因子2、3和5的数称作完美数。例如6、8都是完美数，但14不是，因为它包含因子7。
习惯上我们把1当做是第一个完美数。求按从小到大的顺序的第n个完美数。

给你一个正整数n (1 <= n <= 10^5),请你输出答案。
例如：n=3
则输出：3
    
单身狗

    描述:
    自然界存在两种狗：恩爱狗和单身狗。恩爱狗总是成对出现，单身狗总是单个活动。假设每只狗都有一个编号，每对恩爱狗的编号相同。恩爱狗协会组织了一次恩爱狗Party，会场混进了一只单身狗，请你帮助他们找出这只单身狗。 给你一个长度为n（1< n < 1000000）的正整数列表L，表示每只狗的编号， 请你输出单身狗的编号。
例如：L=[1,1,4,4,3,5,5]
则输出：3


    
单身狗II

    描述:
    故事背景和“单身狗”相同，只不过这次Party中混进了两只单身狗，请你输出这两只单身狗的编号，小编号在前，大编号在后，以一个空格隔开。
例如：L=[1,1,4,4,3,5,5,7]
则输出：3 7


    
路径总数

    描述:
    给你一个网格地图，网格图中有一个特殊点(特殊点保证不是右上角的点）。初始你站在地图的左下角，只能向右走和向上走，请你求出从网格左下角走到右上角，且不经过特殊点的方案总数。
现在告诉你地图的行数和列数m, n (0 < m <= 30, 0 < n <= 30), 以及特殊点的坐标(x, y), 请你输出方案总数。
例如：
m = 5, n = 4, x = 2, y = 3
则输出：
23


Note: 样例输入对应的地图如下，其中#为特殊点
....
....
....
..#.
....
    
吃糖果

    描述:
    小Py喜欢吃糖果，但是他有一个怪癖，就是不喜欢将一样的糖果放在一起吃，喜欢先吃一种，下一次吃另一种。 现在小Py获得了一批糖果，请你帮他计算，是否存在一种吃糖果的顺序，使得他能把所有的糖果吃完。
现在给你一个正整数列表L(L的长度不超过100)，每个元素表示每种糖果的数量，如果存在某种顺序使得小Py能够吃完所有的糖果， 则输出Yes, 否则输出No.
例如：L = [4, 1, 1]
则输出： No
      L = [2, 2]
则输出： Yes
    
k差等数

    描述:
    k差等数的定义：任意两位之间的差的绝对值都为k的正十进制数,且不能有前导0。例如'1234', '4321'都是1差等数。
现在给你两个正整数n和k(1 < n <= 30, 0 <= k <= 9)，请你输出n位k差等数的个数。
例如：n=2, k=5
则输出：9

Note: 2位的5差等数如下：16，27，38，49，50，61，72，83，94

    
月饼节快乐

    描述:
    祝筒子们月饼节快乐！！！你可知道我国是从哪一年开始将中秋节列为国家法定节假日的吗？什么，不知道？还不快去问度娘！！请你以阿拉伯数字的形式输出该年份。
    
特殊回文数

    描述:
    123321是一个非常特殊的数，它从左边读和从右边读是一样的。
给你一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n(1<=n<=54)。
按从小到大的顺序输出满足条件的整数，每个整数占一行,例如：
n = 52, 则输出：
899998
989989
998899
    
最小子串

    描述:
    给你三个字符串a, b, c （0 < len(a) <= 100, 0 < len(b), len(c) <= 20)，请你找出a的某个子串，要求该子串长度最小，并且同时包含b和c。特别地，如果有多个这样的子串，则请输出字母序最小的一个，如果不存在这样的子串，输出No。
例如：a='abcd', b='ab', c='bc', 则输出：abc

    
求解幂方程

    描述:
    定义方程y = x^x (x的x次幂），给你y(1 <= y <= 1000), 请你求出x的解，结果保留到小数点后3位。
例如： y=2
则输出：1.560
    
幸运树

    描述:
    小Py最近迷上了幸运数字。他所认为的幸运数字是指只由4或7组成的数字。比如44， 7774， 4都是幸运数字，而5， 17， 4437等就不是。

现在小Py有一棵树, 这棵树有n个节点， n-1条无向边且保证树连通。现在每条边都有个权值， 如果该权值为幸运数， 那么这个边就是幸运边。小Py想知道存在多少个三元组(a, b, c)， 使得在树上， a到b的路径和b到c的路径上都至少存在一个幸运边。三元组的不同排序算作不同的结果。 比如(1, 2, 3), (2, 1, 3), (1, 3, 2)都是不同的三元组。

现在给你这棵树的结构L，求三元组的个数。其中L是一个三元组的列表，每个三元组（x, y, z)表示点x到y有一条边，权值为z; 节点的编号为从1开始的连续数字。

例如，L=[(1, 2, 4),(3, 1, 2),(1, 4, 7)]
则输出： 16
Note：16个三元组分别为：(1,2,4),(1,4,2),(2,1,3),(2,1,4),(2,3,1),(2,3,4),(2,4,1),(2,4,3),(3,2,4),(3,4,2),(4,1,2),(4,1,3),(4,2,1),(4,2,3),(4,3,1),(4,3,2)。
    
欧拉函数1

    描述:
    欧拉函数的定义是：对于n,Eurla(n)为与n互质的小于n的正整数的个数。
给定n(n<=1000),输出Eurla(n)
    
欧拉函数2

    描述:
    欧拉函数的定义是：对于n,Eurla(n)为与n互质的小于n的正整数的个数。
给定n(n<=10000000),输出Eurla(n)
    
欧拉函数3

    描述:
    欧拉函数的定义是：对于n,Euler(n)（数学界用phi(n)表示，phi是个希腊字母）为与n互质的小于n的正整数的个数。
给定l,r(1<=l<=r<=10000),输出S(l,r)=Euler(l)+Euler(l+1)+Euler(l+2)+...+Euler(r)=sigma(Euler(i),i in integer[l,r])
例如：l=1, r=10, 则输出 34
    
合法括号序列

    描述:
    给你一个只包含括号（'('、 ')'、 '{'、 '}'、 '[' 和 ']'）的字符串seq，请你判断该序列是否是合法的括号序列。合法请输出Yes，否则输出No。
例如：
seq="()", 输出Yes
seq="()[]{}", 输出Yes
seq="(]", 输出No
seq="([)]", 输出No

    
list深度

    描述:
    给你一个多层list L, 如 L=[1,2,3,[4,[5,6]]], 求出最内层[]的深度并输出,
如样例L的结果为3
    
