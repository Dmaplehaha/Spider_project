b'Python3\xe4\xb8\xadPyMongo\xe7\x9a\x84\xe7\x94\xa8\xe6\xb3\x95'http://mmbiz.qpic.cn/mmbiz_png/egDQPiaUh6ylU5mFvIAWV1Dl0a03DO63n1qy4AJsNAqb45Ery7Crgibr65WBxzatOI2bibLMeicwk4F4zC2yOcqvEQ/640
<span style="font-size: 14px;">点击上图即可限时<span style="color: #FF0000;">半价</span>购买课程</span><span style="font-size: 14px;"><br  /></span>在这里我们来看一下Python3下MongoDB的存储操作，在本节开始之前请确保你已经安装好了MongoDB并启动了其服务，另外安装好了Python的PyMongo库。
连接MongoDB我们需要使用PyMongo库里面的MongoClient，一般来说传入MongoDB的IP及端口即可，第一个参数为地址host，第二个参数为端口port，端口如果不传默认是27017。
 另外MongoClient的第一个参数host还可以直接传MongoDB的连接字符串，以mongodb开头，例如：
 MongoDB中还分为一个个数据库，我们接下来的一步就是指定要操作哪个数据库，在这里我以test数据库为例进行说明，所以下一步我们需要在程序中指定要使用的数据库。
  MongoDB的每个数据库又包含了许多集合Collection，也就类似与关系型数据库中的表，下一步我们需要指定要操作的集合，在这里我们指定一个集合名称为students，学生集合。还是和指定数据库类似，指定集合也有两种方式。
   运行结果：
     对于insert_many()方法，我们可以将数据以列表形式传递即可，示例如下：
    我们也可以直接根据ObjectId来查询，这里需要使用bson库里面的ObjectId。
  对于多条数据的查询，我们可以使用find()方法，例如在这里查找年龄为20的数据，示例如下：
  如果要查询年龄大于20的数据，则写法如下：
 在这里将比较符号归纳如下表：
符号含义示例
$lt小于{'age': {'$lt': 20}}
$gt大于{'age': {'$gt': 20}}
$lte小于等于{'age': {'$lte': 20}}
$gte大于等于{'age': {'$gte': 20}}
$ne不等于{'age': {'$ne': 20}}
$in在范围内{'age': {'$in': [20, 23]}}
$nin不在范围内{'age': {'$nin': [20, 23]}}

另外还可以进行正则匹配查询，例如查询名字以M开头的学生数据，示例如下：
 在这里将一些功能符号再归类如下：
符号含义示例示例含义
$regex匹配正则{'name': {'$regex': '^M.*'}}name以M开头
$exists属性是否存在{'name': {'$exists': True}}name属性存在
$type类型判断{'age': {'$type': 'int'}}age的类型为int
$mod数字模操作{'age': {'$mod': [5, 0]}}年龄模5余0
$text文本查询{'$text': {'$search': 'Mike'}}text类型的属性中包含Mike字符串
$where高级条件查询{'$where': 'obj.fans_count == obj.follows_count'}自身粉丝数等于关注数

这些操作的更详细用法在可以在MongoDB官方文档找到：
https://docs.mongodb.com/manual/reference/operator/query/
要统计查询结果有多少条数据，可以调用count()方法，如统计所有数据条数：
        值得注意的是，在数据库数量非常庞大的时候，如千万、亿级别，最好不要使用大的偏移量来查询数据，很可能会导致内存溢出，可以使用类似<code style="font-size: 13px; padding-right: 4px; padding-left: 4px; color: rgb(199, 37, 78); background: rgb(238, 238, 238); border-radius: 3px; display: inline-block; margin-right: 5px; margin-left: 5px;">find({'_id': {'$gt': ObjectId('593278c815c2602678bb2b8d')}})</code>
这样的方法来查询，记录好上次查询的_id。
对于数据更新可以使用update()方法，指定更新的条件和更新后的数据即可，例如：
 运行结果：
 另外update()方法其实也是官方不推荐使用的方法，在这里也分了update_one()方法和update_many()方法，用法更加严格，第二个参数需要使用$类型操作符作为字典的键名，我们用示例感受一下。
 运行结果：
  运行结果：
 如果调用update_many()方法，则会将所有符合条件的数据都更新，示例如下：
  