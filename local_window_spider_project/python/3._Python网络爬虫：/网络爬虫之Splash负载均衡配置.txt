b'\xe7\xbd\x91\xe7\xbb\x9c\xe7\x88\xac\xe8\x99\xab\xe4\xb9\x8bSplash\xe8\xb4\x9f\xe8\xbd\xbd\xe5\x9d\x87\xe8\xa1\xa1\xe9\x85\x8d\xe7\xbd\xae'如果我们用 Splash 来做 JavaScript 动态渲染的页面的抓取的话，如果爬取的量非常大，任务非常多，如果我们用一个 Splash 服务来处理的话未免压力太大了，所以我们可以考虑搭建一个负载均衡器来把压力分散到各个服务器上，这样相当于多台机器多个服务共同参与任务的处理，可以减小单个 Splash 服务的压力。
要搭建 Splash 负载均衡首先我们需要有多个 Splash 服务，假如在这里我在四台远程主机的 8050 端口上都开启了 Splash 服务，它们的服务地址分别为：41.159.27.223:8050、41.159.27.221:8050、41.159.27.9:8050、41.159.117.119:8050，四个服务完全一致，都是通过 Docker 的 Splash 镜像开启的，访问任何一个服务都可以使用 Splash 服务。
接下来我们可以选用任意一台带有公网 IP 的主机来配置负载均衡，首先需要在这台主机上装好 Nginx，然后修改 Nginx 的配置文件 nginx.conf，添加如下内容：
 或者我们也可以不指定配置，配置如下：
 另外我们还可以指定权重，配置如下：
 最后还有一种 IP 哈希负载均衡，配置如下：
 我们可以根据不同的情形选用不同的配置，配置完成后重启一下 Nginx 服务：
 现在 Splash 是公开访问的，如果我们不想让其被公开访问还可以配置认证，仍然借助于 Nginx 即可，可以在 server 的 location 字段中添加一个 auth_basic 和 auth_basic_user_file 字段，配置如下：
    最后我们可以用代码来测试一下负载均衡的配置，看看到底是不是每次请求会切换IP，利用
http://httpbin.org/get
测试即可，代码实现如下：
 多次运行代码之后可以发现每次请求的 IP 都会变化：
如第一次的结果：
  