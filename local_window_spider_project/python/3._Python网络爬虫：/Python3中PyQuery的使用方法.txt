b'Python3\xe4\xb8\xadPyQuery\xe7\x9a\x84\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95'如果你对WEB有所涉及，如果你比较喜欢用CSS选择器，如果你对jQuery有所了解，那么这里有一个更适合你的解析库――PyQuery。
接下来我们就来感受一下PyQuery的强大之处。
像BeautifulSoup一样，PyQuery初始化的时候也需要传入HTML数据源来初始化一个操作对象，它的初始化方式有多种，比如直接传入字符串，传入URL，传文件名。下面我们来详细介绍一下。
  初始化的参数不仅可以以字符串的形式传递，还可以传入网页的URL，在这里只需要指定参数为url即可。
  它与下面的功能是相同的：
  以上三种初始化方式均可，当然最常用的初始化方式还是以字符串形式传递。
我们首先用一个实例来感受一下PyQuery的CSS选择器的用法。
  然后我们将它的类型打印输出，可以看到它的类型依然是PyQuery类型。
下面我们介绍一些常用的查询函数，这些函数和jQuery中的函数用法也完全相同。
查找子节点需要用到find()方法，传入的参数是CSS选择器，我们还是以上面的HTML为例。
  其实find()的查找范围是节点的所有子孙节点，而如果我们只想查找子节点，那可以用children()方法。
    我们可以用parent()方法来获取某个节点的父节点，我们用一个实例来感受一下：
  这里的父节点是该节点的直接父节点，也就是说，它不会再去查找父节点的父节点，即祖先节点。
但是如果我们想获取某个祖先节点怎么办呢？可以用parents()方法。
  如果我们想要筛选某个祖先节点的话可以向parents()方法传入CSS选择器，这样就会返回祖先节点中符合CSS选择器的节点。
  在上面我们说明了子节点和父节点的用法，还有一种节点那就是兄弟节点，如果要获取兄弟节点可以使用siblings()方法。我们还是以上面的HTML代码为例来感受一下：
 运行结果：
 如果要筛选某个兄弟节点，我们依然可以向方法传入CSS选择器，这样就会从所有兄弟节点中挑选出符合条件的节点了。
 运行结果：
 对于单个节点来说，我们可以直接打印输出，也可直接转成字符串。
    提取到节点之后，我们的最终目的当然是提取节点所包含的信息了，比较重要的信息有两类，一是获取属性，二是获取文本，下面我们分别进行说明。
提取到某个PyQuery类型的节点之后，我们可以调用attr()方法来获取属性。
   如果我们选中的是多个元素，然后调用attr()方法会出现怎样的结果？我们用一个实例来测试一下。
  所以当返回结果包含多个节点时，调用attr()方法只会得到第一个节点的属性。
那么遇到这种情况如果我们想获取所有的a节点的属性，就需要用到上文所说的遍历了。
  获取节点之后的另一个主要的操作就是获取其内部的文本了，我们可以调用text()方法来获取。
  但如果我们想要获取这个节点内部的HTML文本，就可以用html()方法。
 运行结果：
 我们用一个实例来看一下：
  所以这个地方值得注意，如果我们得到的结果是多个节点，如果要获取每个节点的内部HTML文本，则需要遍历每个节点，而text()方法不需要遍历就可以获取，它是将所有节点取文本之后合并成一个字符串。
PyQuery提供了一系列方法来对节点进行动态修改操作，比如为某个节点添加一个class，移除某个节点等等，这些操作有时候会为提取信息带来极大的便利。
由于节点操作的方法太多，下面举几个典型的例子来说明它的用法。
我们先用一个实例来感受一下：
 运行结果：
 所以说我们addClass()、removeClass()这些方法可以动态地改变节点的class属性。
 当然除了操作class这个属性，也有attr()方法来专门针对属性进行操作，也可以用text()、html()方法来改变节点内部的内容。
我们用实例感受一下：
 运行结果：
 所以说，attr()方法如果只传入第一个参数属性名，则是获取这个属性值，如果传入第二个参数，可以用来修改属性值，text()和html()方法如果不传参数是获取节点内纯文本和HTML文本，如果传入参数则是进行赋值。
remove顾名思义移除，remove()方法有时会为信息的提取带来非常大的便利。下面我们看一个实例：
 在这里我们直接先尝试提取class为wrap的节点的内容，看看是不是我们想要的，运行结果如下：
 那这是remove()方法就可以派上用场了，我们可以接着这么做:
 所以说，remove()方法可以删除某些冗余内容，来方便我们的提取。在适当的时候使用可以极大地提高效率。
另外其实还有很多节点操作的方法，比如append()、empty()、prepend()等方法，他们和jQuery的用法是完全一致的，详细的用法可以看到官方文档。
http://pyquery.readthedocs.io/en/latest/api.html
CSS选择器之所以强大，还有一个很重要的原因就是它支持多种多样的伪类选择器。例如选择第一个节点、最后一个节点、奇偶数节点、包含某一文本的节点等等，我们用一个实例感受一下：
